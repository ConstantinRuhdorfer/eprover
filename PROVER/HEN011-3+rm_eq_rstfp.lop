#--------------------------------------------------------------------------
# File     : HEN011-3 : TPTP v2.1.0. Released v1.0.0.
# Domain   : Henkin Models
# Problem  : This operation is commutative
# Version  : [MOW76] axioms.
# English  : Define & on the set of Z', where Z' = identity/Z, 
#            by X' & Y'=X'/(identity/Y'). The operation is commutative.

# Refs     : [MOW76] McCharen et al. (1976), Problems and Experiments for a
# Source   : [ANL]
# Names    : HP11 [ANL]

# Status   : unsatisfiable
# Rating   : 0.83 v2.1.0, 1.00 v2.0.0
# Syntax   : Number of clauses    :   13 (   0 non-Horn;  10 unit;   9 RR)
#            Number of literals   :   17 (   9 equality)
#            Maximal clause size  :    3 (   1 average)
#            Number of predicates :    2 (   0 propositional; 2-2 arity)
#            Number of functors   :    9 (   8 constant; 0-2 arity)
#            Number of variables  :   13 (   3 singleton)
#            Maximal term depth   :    4 (   1 average)

# Comments : 
#          : tptp2X -f setheo:sign -t rm_equality:rstfp HEN011-3.p 
#--------------------------------------------------------------------------
# quotient_less_equal1, axiom.
equal(divide(X, Y), zero) <- 
    less_equal(X, Y).

# quotient_less_equal2, axiom.
less_equal(X, Y) <- 
    equal(divide(X, Y), zero).

# quotient_smaller_than_numerator, axiom.
less_equal(divide(X, Y), X) <- .

# quotient_property, axiom.
less_equal(divide(divide(X, Z), divide(Y, Z)), divide(divide(X, Y), Z)) <- .

# zero_is_smallest, axiom.
less_equal(zero, X) <- .

# less_equal_and_equal, axiom.
equal(X, Y) <- 
    less_equal(X, Y),
    less_equal(Y, X).

# identity_is_largest, axiom.
less_equal(X, identity) <- .

# part_of_theorem, hypothesis.
 <- equal(divide(divide(identity, a), divide(identity, divide(identity, b))), divide(divide(identity, b), divide(identity, divide(identity, a)))).

# identity_divide_a, hypothesis.
equal(divide(identity, a), c) <- .

# identity_divide_b, hypothesis.
equal(divide(identity, b), d) <- .

# identity_divide_c, hypothesis.
equal(divide(identity, c), e) <- .

# identity_divide_d, hypothesis.
equal(divide(identity, d), g) <- .

# prove_commutativity, conjecture.
 <- equal(divide(c, g), divide(d, e)).

#--------------------------------------------------------------------------
